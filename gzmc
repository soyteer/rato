#!/usr/bin/env bash

# R4to0's mass gzipper script
# GZip files recursively for a specified folder

init() {
	# Parse arguments
	while [ $# -gt 0 ]; do
		case "$1" in
		"-dir")
			if [ -z "$2" ]; then
				echo "Please specify a directory."
				exit 1
			fi
			WORKDIR="$2"
			shift ;;
		"-sdel")
			export SDELETE="-sdel"
			shift ;;
		"-threads")
			if ! [[ $2 =~ ^[0-9]+$ ]] || [ $2 == 0 ]; then
				echo "Error: -threads value is not specified or invalid." >&2; exit 1
			fi
			THREADS="$2"
			shift ;;
		"-help")
			syntax
			exit 0
			;;
		esac
		shift
	done

	# Default folder if -dir is not specified
	if [ -z "$WORKDIR" ]; then
		echo "Warning: -dir not specified, defaulting to \"compress\""
		WORKDIR="compress"
	fi

	if [ -z "$THREADS" ]; then
		THREADS=$(getconf _NPROCESSORS_ONLN)
	fi

	if [ ! -d "$WORKDIR" ]; then
		echo "The specified folder ($WORKDIR) does not exist!"
		exit 1
	fi

	if [ -z $(command -v 7z) ]; then
		echo "ERROR: 7-zip not found. Please install p7zip-full package."
		exit 1
	fi

	if [ -n "$SDELETE" ]; then
		echo "WARNING: SOURCE FILE WILL BE DELETED AFTER PROCESSING!"
	fi

	processfiles $WORKDIR
}

processfiles() {
	echo "Working with $THREADS threads."
	find $1 -type f ! -name '*.gz' -print0 | xargs -I % -0 -P $THREADS --process-slot-var=index bash -c 'echo "Processing % in thread $index"; 7z a -tgzip -mfb=256 -mx=9 "%".gz "%" "$SDELETE" >/dev/null 2>&1'
}

syntax() {
	helpmsg=(
		"Syntax:"
		"$0 [-dir <dir>] [-threads <number>] [-sdel]"
		""
		"Params:"
		"-dir <dir>	Specifies the directory to be compressed. [Default: compress]"
		"-sdel		Deletes source files after processing (v9.30 and up). [Default: disabled]"
		"-threads	How many instances to run. [Default: $(getconf _NPROCESSORS_ONLN)]"
	)
	for dsphelp in "${helpmsg[@]}"
	do
    	echo "$dsphelp"
	done
}

init "$@"
